/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package antirollbarcalculator;

import java.awt.Toolkit;

/**
 *
 * @author VladVasiljev
 */
public class AntiRollBarGUI extends javax.swing.JFrame {

    /**
     * Creates new form AntiRollBarGUI
     */
    public AntiRollBarGUI() {
        initComponents();
        this.setLocation(300, 100);
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        weightLab = new javax.swing.JLabel();
        Front = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        TitleOfProgram = new javax.swing.JLabel();
        stiffest = new javax.swing.JTextField();
        softest = new javax.swing.JTextField();
        weightOfCar = new javax.swing.JTextField();
        stiffestLab = new javax.swing.JLabel();
        softestLab = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        Rear = new javax.swing.JButton();
        frontLabel = new javax.swing.JLabel();
        rearLabel = new javax.swing.JLabel();
        FrontValue = new javax.swing.JLabel();
        RearValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.black);

        weightLab.setText("Weight %");

        Front.setText("Calculate Front ");
        Front.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FrontActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        TitleOfProgram.setText("Anti Roll Bar Calculator ");

        stiffest.setText("65");
        stiffest.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stiffestFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stiffestFocusLost(evt);
            }
        });

        softest.setText("1");
        softest.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                softestFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                softestFocusLost(evt);
            }
        });
        softest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                softestActionPerformed(evt);
            }
        });

        weightOfCar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                weightOfCarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                weightOfCarFocusLost(evt);
            }
        });

        stiffestLab.setText("Stiffest");

        softestLab.setText("Softest");

        Title.setText("Forza Horzion 3");

        Rear.setText("Calculate Rear");
        Rear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RearActionPerformed(evt);
            }
        });

        frontLabel.setText("Front");

        rearLabel.setText("Rear");

        FrontValue.setText("Front Value :");
        FrontValue.setToolTipText("");

        RearValue.setText("Rear Value :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stiffestLab)
                                .addGap(3, 3, 3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(weightLab)
                                .addGap(6, 6, 6))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RearValue)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addComponent(softestLab))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(FrontValue))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(stiffest, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                        .addComponent(softest)
                        .addComponent(weightOfCar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(TitleOfProgram))
                    .addComponent(frontLabel)
                    .addComponent(rearLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Front, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Rear, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exit)
                        .addGap(22, 22, 22))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TitleOfProgram)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(frontLabel)
                            .addComponent(FrontValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rearLabel)
                            .addComponent(RearValue)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stiffest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stiffestLab)
                            .addComponent(Front))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(softest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(softestLab))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weightOfCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightLab)
                            .addComponent(Rear))
                        .addGap(18, 18, 18)
                        .addComponent(exit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FrontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FrontActionPerformed
        double stiffness;
        double softness;
        double weight;
        stiffness = Double.parseDouble(stiffest.getText());
        softness = Double.parseDouble(softest.getText());
        weight = Double.parseDouble(weightOfCar.getText());
        double convertedWeight = weight / 100;
        double total = (((stiffness - softness) * convertedWeight) + softness);
        String finalTotal = String.valueOf(total);
        frontLabel.setText(finalTotal);


    }//GEN-LAST:event_FrontActionPerformed

    private void softestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_softestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_softestActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void RearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RearActionPerformed
        double stiffness;
        double softness;
        double weight;
        stiffness = Double.parseDouble(stiffest.getText());
        softness = Double.parseDouble(softest.getText());
        weight = Double.parseDouble(weightOfCar.getText());
        double rearWeight = 100 - weight;
        double convertedWeight = rearWeight / 100;
        double total = (((stiffness - softness) * convertedWeight) + softness);
        String finalTotal = String.valueOf(total);
        rearLabel.setText(finalTotal);

    }//GEN-LAST:event_RearActionPerformed

    private void stiffestFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stiffestFocusGained
//        if (stiffest.getText().equals("65 if Race Anti-Roll Bars Installed")) {
//            stiffest.setText("");
//        }
    }//GEN-LAST:event_stiffestFocusGained

    private void stiffestFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stiffestFocusLost
//        if (stiffest.getText().equals("")) {
//            stiffest.setText("65 If Race Anti-Roll Bars Installed");
//        }

    }//GEN-LAST:event_stiffestFocusLost

    private void softestFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_softestFocusGained
//        if (softest.getText().equals("1 If Race Anti-Roll Bars Installed")) {
//            softest.setText("");
//        }
    }//GEN-LAST:event_softestFocusGained

    private void softestFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_softestFocusLost
//        if (softest.getText().equals("")) {
//            softest.setText("1 If Race Anti-Roll Bars Installed");
//        }
    }//GEN-LAST:event_softestFocusLost

    private void weightOfCarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weightOfCarFocusGained
        if (weightOfCar.getText().equals("Check the weight in % in-game")) {
            weightOfCar.setText("");
        }
    }//GEN-LAST:event_weightOfCarFocusGained

    private void weightOfCarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weightOfCarFocusLost
        if (weightOfCar.getText().equals("")) {
            weightOfCar.setText("Check the weight in % in-game");
        }
    }//GEN-LAST:event_weightOfCarFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AntiRollBarGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AntiRollBarGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AntiRollBarGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AntiRollBarGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AntiRollBarGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Front;
    private javax.swing.JLabel FrontValue;
    private javax.swing.JButton Rear;
    private javax.swing.JLabel RearValue;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel TitleOfProgram;
    private javax.swing.JButton exit;
    private javax.swing.JLabel frontLabel;
    private javax.swing.JLabel rearLabel;
    private javax.swing.JTextField softest;
    private javax.swing.JLabel softestLab;
    private javax.swing.JTextField stiffest;
    private javax.swing.JLabel stiffestLab;
    private javax.swing.JLabel weightLab;
    private javax.swing.JTextField weightOfCar;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.jpeg")));
    }
}
